<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hiroaki Yutani</title>
    <link>https://yutani.rbind.io/post/</link>
    <description>Recent content in Posts on Hiroaki Yutani</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 21 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yutani.rbind.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Confession: It&#39;s Me Who Committed the Change to Suppress .Rd Diffs On GitHub</title>
      <link>https://yutani.rbind.io/post/2017-10-21-rd-diff/</link>
      <pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://yutani.rbind.io/post/2017-10-21-rd-diff/</guid>
      <description>You may notice that diffs of .Rd files are suppressed by default on GitHub since some time.
Do you wonder who did this? It&amp;rsquo;s me, yay! This is my pull request:
Ignore roxygen2 generated files by yutannihilation · Pull Request #3373 · github/linguist
Though I thought I&amp;rsquo;ve done the right thing at that time, now I&amp;rsquo;m afraid this change may be bad for some cases&amp;hellip;
After the relese of roxygen2 6.</description>
    </item>
    
    <item>
      <title>Use CircleCI for R Projects</title>
      <link>https://yutani.rbind.io/post/2017-10-18-circleci/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://yutani.rbind.io/post/2017-10-18-circleci/</guid>
      <description>Why CircleCI? Yes, I know using Travis CI is this easy, thanks to devtools package:
devtools::use_travis()  Travis CI is OK most of the time. Still, CircleCI has some advantages:
 arbitrary Docker images cool test summaries  Arbitrary Docker images Compared to Travis CI, CircleCI allows the users to use any docker images. For example, my WIP package which provides DBI-compatible interface to Redash uses these images:
docker: - image: rocker/tidyverse:latest - image: redis:3.</description>
    </item>
    
    <item>
      <title>Introduction to gghighlight: Highlight ggplot&#39;s Lines and Points with Predicates</title>
      <link>https://yutani.rbind.io/post/2017-10-06-gghighlight/</link>
      <pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://yutani.rbind.io/post/2017-10-06-gghighlight/</guid>
      <description>Suppose we have a data that has too many series like this:
set.seed(2)d &amp;lt;- purrr::map_dfr(letters,~ data.frame(idx = 1:400,value = cumsum(runif(400, -1, 1)),type = .,stringsAsFactors = FALSE))For such data, it is almost impossible to identify a series by its colour as their differences are so subtle.
library(ggplot2)ggplot(d) +geom_line(aes(idx, value, colour = type))Highlight lines with ggplot2 + dplyrSo, I am motivated to filter data and map colour only on that, using dplyr:</description>
    </item>
    
  </channel>
</rss>